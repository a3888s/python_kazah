# Попрочіть користувача написати строку будбь якого формату і роздрукуйте якщо
# строка являється паліндромом.
# Паліндром - це строка яка читається назад і вперед однаково.
# (козак, дохід, радар, око, 101, 999)
# Приклад:
# Ввід копистувачем: радар
# Відповідь програми: це паліндром!

# text = input("Введіть слово: ").lower()

# if text == text[::-1]:
#     print("yes")
# else:
#     print("no")


# Перевірка на пустоту.

# text = "I"

# # Часом змінні можуть зберізати пустоту чи отримувати пусті данні.
# # Для перевіруи таких змінних використовуємо умову if/

# if text:
#     print("не пуста")
# else:
#     print("пуста")


# my_list = ["apple"]

# if my_list:
#     print("Не пустий список")
# else:
#     print("пустий")


# None = B Python існує тип данних описуючий пустоту.
# Цей ти п данних називається None Type

# При створенні пустих змінних, вони зберігают в собі None.
# Тобто пустоту

# None при умові завжди дає False.
# Пустота (None) равен False

# text = ""
# if text: #= if None: = # if False:
#     print("Не пустий!")

# Завдання:
# Попросіть користувача ввести імя.
# Якщо користувач ввів пустоту, то сповістіть ййому про це.
# Якщо імя було введено, то привітайте його.
# name = input("Введіть імя: ")

# if name:
#     print(f"Welcom {name}")
# else:
#     print("error")



# not - заперечення в умовах.


# username_list = ["natlus", "alina98", "askash00", "killer_kg"]

# username = input("Введіть імя: ")

# # if username in username_list: # перевіряє на наявність  в списку
# if username not in username_list:
#     print("ok")
# else:
#     print("no")

# Використання not рівностей

# # 
# age = int(input("Введіть ваш вік"))

# if age >=18:
#     print("Ви дорослий!")
# else:
#     print("Вам немає 18")

# if not age >=18:
#     print("Вам немає 18")
# else:
#     print("Взрослий")

# Значення True та False  в змінних

# is_active = False
# if is_active == True:
#     print("Ігра активна")
# else:
#     print("Ігра на паузі")

# скорочений варіант перевірки з True та False

# is_staff = False
# if is_staff:
#     print("Адміністраторо")
# else:
#     print("Це звичайний користувач")

# Рахується, що один рік, прожитий собакою, рівний 7 людських років. При цьому часто не враховується
# що собаки часто стають дорослими до 2 років. Таким чином, більшість віддають перевагу кожен із перших
# 2 років собаки прирівнювати до 10,5 роки людського життя,  а все інше - до 4.
# Напишіть програму, яка буде переводить людський вік в собачий з урахуванням вище логіки.
# Переконайтесь, що програма коректно працює при перерахунку віку собаки менше і більше двух років.
# Також програма повинна виводити повідомлення про помилку, якщо користувач вводить відємне число.

# Основні праіила:
# - Перші 2 звичайні собачі роки рівні 10.5 рокам людських
# - Інші роки після двух рівні 4 собачі роки.
# - Якщо ввести відємне число повідомити про помилку.


# user_year = int(input("Введіть ваш вік: "))

# if user_year > 0:
#     x1 = (user_year-2)
#     x2 = (user_year/4)
#     x3 = (x1/10.5)
#     x4 = round(x2+x3, 1)
#     print(f"Ваших собачих років: {x4}")
# else:
#     print("Ви ввели відємне значення, спробуйте ще!")


# usd = int(input("Введіть номінал банкноти: "))

# if usd == 1:
#     print ("Джордж Вашингтон")
# elif usd == 2:
#     print("Томас Джеферсон")
# elif usd == 5:
#     print("Авраам Лінкольн")
# elif usd == 10:
#     print("Александр Гамільтон")
# elif usd == 20:
#     print("Ендрю Джексон")
# elif usd == 50:
#     print("Уилс Грант")
# elif usd == 100:
#     print("Бенджамін Франклін")
# else:
#     print("Данної банкноти не існує, спробуйте ще!")